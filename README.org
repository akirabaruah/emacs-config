* Settings

** Key Definitions

#+BEGIN_SRC emacs-lisp
(setq akirabaruah/leader-key (kbd "SPC"))
#+END_SRC

** Files

*** Backup Files

Save backups of open files to /tmp (or equivalent) directory.

#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))
#+END_SRC

*** Custom File

Put custom autogenerated settings in a separate file.

#+BEGIN_SRC emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(when (file-exists-p custom-file)
  (load custom-file 'noerror))
#+END_SRC

*** Clean Up

Delete trailing whitespace on save.

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'delete-trailing-whitespace)
#+END_SRC

** View

*** Column Numbers

Enable column numbers.
#+BEGIN_SRC emacs-lisp
(column-number-mode)
#+END_SRC

*** Line Numbers

Enable line numbers. See https://www.emacswiki.org/emacs/LineNumbers.

#+BEGIN_SRC emacs-lisp
(when (version<= "26.0.50" emacs-version )
  (global-display-line-numbers-mode))
#+END_SRC

* Packages

** General

Simplify key bindings.

#+BEGIN_SRC emacs-lisp
(use-package general :ensure t)
#+END_SRC

** Evil

Use Vim keybindings to avoid Repetitive Strain Injury (RSI).

#+BEGIN_SRC emacs-lisp
(use-package evil
  :ensure t
  :init
  (setq evil-want-C-i-jump nil)  ;; C-i is also <tab>; don't use it for evil
  :config
  (evil-mode))
#+END_SRC

** Hydra

Hydras are configurable key command menus.

#+BEGIN_SRC emacs-lisp
(use-package hydra
  :ensure t)
#+END_SRC

Enable ~:hydra~ keyword for ~use-package~. See
https://gitlab.com/to1ne/use-package-hydra.

#+BEGIN_SRC emacs-lisp
(use-package use-package-hydra
  :requires hydra)
#+END_SRC

* Hydra Menus

Definitions for Hydra menus. Requires the ~hydra~ package installed above.

** General

First, create a top-level leader key mapping using ~general~.

#+BEGIN_SRC emacs-lisp
(general-define-key
  :states '(normal visual emacs)
  :prefix "SPC"
  :non-normal-prefix "M-SPC"
  "f" 'hydra-file/body
  "w" 'hydra-window/body)
#+END_SRC

** File

Basic file navigation.

#+BEGIN_SRC emacs-lisp
(defhydra hydra-file (:color blue :hint nil) "
File Hydra
"
  ("e" load-file "load elisp")
  ("f" find-file "find")
  ("s" save-buffer "save"))
#+END_SRC

** Window

Window manipulation.

#+BEGIN_SRC emacs-lisp
(defhydra hydra-window (:hint nil) "
Window Hydra
^Movement^  ^Manipulation^
^--------^  ^------------^---------
_j_: down   _-_: split vertically
_k_: up     _/_: split horizontally
_h_: left   _c_: close window
_l_: right
"
  ("j" evil-window-down)
  ("k" evil-window-up)
  ("h" evil-window-left)
  ("l" evil-window-right)
  ("-" split-window-vertically)
  ("/" split-window-horizontally)
  ("c" delete-window)
  ("SPC" nil "cancel" :color blue))
#+END_SRC
